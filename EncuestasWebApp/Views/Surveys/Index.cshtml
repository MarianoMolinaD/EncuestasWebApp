@model IEnumerable<Entity.SurveyShowViewModel>
@{
    ViewData["Title"] = "Mis encuestas";
}

<div class="container mt-4">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center py-2">
            @TempData["Success"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center py-2">
            @TempData["Error"]
        </div>
    }
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">
            <i class="bi bi-list-task me-2 text-primary"></i>Mis encuestas
        </h2>
        <a href="@Url.Action("Create", "Surveys")" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Nueva encuesta
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive shadow-sm">
            <table class="table table-hover align-middle">
                <thead class="table-primary text-center">
                    <tr>
                        <th>Id</th>
                        <th>Encuesta</th>
                        <th>Descripcion</th>
                        <th>Enlace</th>
                        <th>Fecha de creacion</th>
                        <th>Respuestas</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var survey in Model)
                    {
                        string surveyUrl = Url.Action("ViewSurvey", "Surveys", new { id = survey.UniqueLink }, Context.Request.Scheme);

                        <tr data-id="@(survey.Id)">
                            <td>@survey.Id</td>
                            <td>@survey.Name</td>
                            <td>@survey.Description</td>
                            <td>
                                <div class="input-group input-group-sm">
                                    <input type="text"
                                           class="form-control text-center"
                                           readonly
                                           value="@surveyUrl"
                                           id="link-@survey.UniqueLink" />
                                    <button class="btn btn-outline-primary" type="button"
                                            onclick="copyLink('@survey.UniqueLink')">
                                        <i class="bi bi-clipboard"></i>
                                    </button>
                                </div>
                            </td>
                            <td style="text-align:center;">@survey.CreatedAt.ToString("dd/MM/yyyy")</td>
                            <td style="text-align:center;">@survey.Responses</td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <a href="@Url.Action("Edit", "Surveys", new { id = survey.Id })"
                                       class="btn btn-outline-warning btn-sm"
                                       title="Editar encuesta">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>

                                    <button type="button"
                                            class="btn btn-outline-danger btn-sm"
                                            title="Eliminar encuesta"
                                            onclick="confirmDelete('@survey.Id', '@survey.Name')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4">
            <i class="bi bi-info-circle"></i> No tienes encuestas creadas todavía.
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

            function showToast(message, type = 'success') {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 2500,
                timerProgressBar: true,
                background: '#fff',
                customClass: {
                    popup: 'shadow-sm rounded-3'
                },
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });

            Toast.fire({
                icon: type,
                title: message
            });
        }

        function copyLink(id) {
            const input = document.getElementById('link-'+id);
            input.select();
            input.setSelectionRange(0, 99999);
            navigator.clipboard.writeText(input.value);
             showToast('Link copiado al portapapeles', 'success')
        }

        function confirmDelete(id, name) {
            Swal.fire({
                title: `¿Eliminar encuesta "${name}"?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Sí, eliminar",
                cancelButtonText: "Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    DeletedSurveys(id);
                }
            });
        }

        async function DeletedSurveys(id){
            try {
                const response = await fetch(`/Surveys/Delete/${id}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" }
                });

                const data = await response.json();

                if (data.success) {
                    showToast(data.message, 'success')
                    document.querySelector(`tr[data-id='${id}']`)?.remove();
                } else {
                    showToast(data.message, 'Error')
                }
            } catch (error) {
                showToast(data.message, 'Error')
            }
        }
    </script>
}

